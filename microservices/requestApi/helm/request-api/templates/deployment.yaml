apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ocwaRequestApi.fullname" . }}
  labels:
    app: {{ template "ocwaRequestApi.name" . }}
    chart: {{ template "ocwaRequestApi.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "ocwaRequestApi.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "ocwaRequestApi.name" . }}
        release: {{ .Release.Name }}
    spec:
      {{ if .Values.emailTemplateEnabled }}
      volumes:
      - name: emailtemplate
        configMap:
          name: {{ template "ocwaRequestApi.fullname" . }}-requestapi-configmap
          defaultMode: 511
      {{ end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{ if or (.Values.emailTemplateEnabled) (.Values.emailSubmitTemplateEnabled) }}
          volumeMounts:
          - name: emailtemplate
            mountPath: ./notifications
            subPath: "emailTemplate"
          {{ end }}
          env:
            - name: API_PORT
              value: "{{ .Values.apiPort }}"
            - name: WS_PORT
              value: "{{ .Values.wsPort }}"
            - name: LOG_LEVEL
              value: {{ .Values.logLevel }}
            - name: DB_HOST
              value: {{ .Values.database.host }}
            - name: DB_USERNAME
              value: {{ .Values.database.username }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "ocwaRequestApi.fullname" . }}-secrets
                  key: dbPassword
            - name: DB_NAME
              value: {{ .Values.database.dbName }}
            - name: FORUM_API
              value: {{ .Values.forumApi }}
            - name: FORUM_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "ocwaRequestApi.fullname" . }}-secrets
                  key: forumApiSecret
            - name: VALIDATION_API
              value: {{ .Values.validationApi }}
            - name: VALIDATION_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "ocwaRequestApi.fullname" . }}-secrets
                  key: validationApiSecret
            - name: PROJECT_API
              value: {{ .Values.projectApi }}
            - name: PROJECT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "ocwaRequestApi.fullname" . }}-secrets
                  key: projectApiSecret
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "ocwaRequestApi.fullname" . }}-secrets
                  key: jwtSecret
            - name: WEBHOOK_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "ocwaRequestApi.fullname" . }}-secrets
                  key: webhookSecret
            - name: CREATE_ROLE
              value: {{ .Values.createRole }}
            - name: OC_GROUP
              value: {{ .Values.ocGroup }}
            - name: REPORTS_GROUP
              value: {{ .Values.reportsGroup }}
            - name: ALLOW_DENY
              value: "{{ .Values.allowDeny }}"
            - name: USER_ID_FIELD
              value: {{ .Values.user.idField }}
            - name: EMAIL_FIELD
              value: {{ .Values.user.emailField }}
            - name: GIVENNAME_FIELD
              value: {{ .Values.user.givenNameField }}
            - name: SURNAME_FIELD
              value: {{ .Values.user.surNameField }}
            - name: GROUP_FIELD
              value: {{ .Values.user.groupField }}
            - name: STORAGE_URI
              value: {{ .Values.storageUri }}
            - name: STORAGE_PORT
              value: "{{ .Values.storagePort }}"
            - name: STORAGE_KEY
              value: {{ .Values.storageKey }}
            - name: STORAGE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "ocwaRequestApi.fullname" . }}-secrets
                  key: storageSecret
            - name: STORAGE_USESSL
              value: "{{ .Values.storageUseSSL }}"
            - name: STORAGE_WARN_SIZE
              value: "{{ .Values.storageWarnSize }}"
            - name: STORAGE_MAX_SIZE
              value: "{{ .Values.storageMaxSize }}"
            - name: STORAGE_IMP_WARN_SIZE
              value: "{{ .Values.storageImpWarnSize }}"
            - name: STORAGE_IMP_MAX_SIZE
              value: "{{ .Values.storageImpMaxSize }}"
            - name: STORAGE_BUCKET
              value: {{ .Values.storageBucket }}
            - name: AUTO_APPROVE
              value: "{{ .Values.autoApprove }}"
            - name: AUTO_APPROVE_IMPORT
              value: "{{ .Values.autoApproveImport }}"
            - name: EMAIL_ON_SUBMIT
              value: "{{ .Values.emailOnSubmit }}"
            - name: IGNORE_GROUPS
              value: '{{ .Values.ignoreGroups }}'
            - name: OCWA_URL
              value: "{{ .Values.ocwaUrl }}"
            - name: OCWA_IMPORT_URL
              value: "{{ .Values.ocwaImportUrl }}"
            - name: EMAIL_ENABLED
              value: "{{ .Values.emailEnabled }}"
            - name: EMAIL_SERVICE
              value: "{{ .Values.emailService }}"
            - name: EMAIL_SECURE
              value: "{{ .Values.emailSecure }}"
            - name: EMAIL_PORT
              value: "{{ .Values.emailPort }}"
            - name: EMAIL_USER
              value: "{{ .Values.emailUser }}"
            - name: EMAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "ocwaRequestApi.fullname" . }}-secrets
                  key: emailPassword
            - name: EMAIL_FROM
              value: "{{ .Values.emailFrom }}"
            - name: GITOPS_ENABLED
              value: "{{ .Values.gitopsEnabled }}"
            - name: GITOPS_URL
              value: "{{ .Values.gitopsUrl }}"
            - name: GITOPS_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "ocwaRequestApi.fullname" . }}-secrets
                  key: gitopsSecret
            - name: DEFAULT_EXPORT_FORM_NAME
              value: "{{ .Values.defaultExportFormName }}"
            - name: DEFAULT_IMPORT_FORM_NAME
              value: "{{ .Values.defaultImportFormName }}"
            - name: DEFAULT_EXPORT_CODE_FORM_NAME
              value: "{{ .Values.defaultExportCodeFormName }}"
            - name: DEFAULT_IMPORT_CODE_FORM_NAME
              value: "{{ .Values.defaultImportCodeFormName }}"
            - name: FORMIO_URL
              value: "{{ .Values.formioUrl }}"
            - name: FORMIO_USERNAME
              value: "{{ .Values.formioUsername }}"
            - name: FORMIO_PASSWORD
              value: "{{ .Values.formioPassword }}"
            
            - name: ORG_ATTRIBUTE
              value: "{{ .Values.orgAttribute }}"
            
            - name: ADMIN_GROUP
              value: "{{ .Values.adminGroup }}"

          ports:
            - name: http
              containerPort: {{ .Values.apiPort }}
              protocol: TCP
            - name: websocket
              containerPort: {{ .Values.wsPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/api-docs
              port: http
          readinessProbe:
            httpGet:
              path: /v1/api-docs
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
