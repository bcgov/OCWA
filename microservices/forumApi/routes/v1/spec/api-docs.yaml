openapi: "3.0.0"
info:
  version: 0.0.1
  title: Forum API
  description: |
    This is a forum api that provides topics, comments and permissions. A Websocket exists on the server on a different port (normally 1 higher than the api)
    that sends out information when it is available over the websocket to interested users. To connect to the websocket you must specify the JWT in the protocol option.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: Brandon Sharratt
servers:
  - url: /v1
    description: This Server
paths:
  /:
    get:
      summary: List all topics
      operationId: listTopics
      tags:
        - Topics
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Which page to start on (relative to limit)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of topics that the user has access to
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Topics"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a topic
      operationId: createTopic
      tags:
        - Topics
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TopicPost"
      responses:
        '200':
          description: Success Message
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /comment/{topicId}:
    get:
      summary: Paged comments for a topic the user has access to
      operationId: listComments
      tags:
        - Comments
      parameters:
        - name: topicId
          in: path
          required: true
          description: The id of the topic to retrieve comments from
          schema:
            type: string
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          default: 100
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Which page to start on (relative to limit)
          required: false
          default: 1
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comments"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a comment
      operationId: createComment
      tags:
        - Comments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentPost"
      responses:
        '200':
          description: Success Message
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /permission:
    get:
      summary: List all permissions
      operationId: listPermissions
      tags:
        - Permissions
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Which page to start on (relative to limit)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Permissions"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a permission
      operationId: createPermission
      tags:
        - Permissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PermissionPost"
      responses:
        '200':
          description: Success Message
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Topic:
      required:
        - _id
        - name
        - parent_id
        - contributors
        - __v
      properties:
        _id:
          type: string
          description: Object id
        name:
          type: string
          description: name of the topic
        parent_id:
          type: string
          description: Object id pointing to another topic
        contributors:
          type: array
          items:
            type: string
          description: List of all people who have commented on this topic, by default contains the topic creator
        __v:
          type: string
          description: version of the topic (increments with changes)
    Topics:
      type: array
      items:
        $ref: "#/components/schemas/Topic"
    Comment:
      required:
        - _id
        - created_ts
        - topic_id
        - comment
        - author_user
        - __v
      properties:
        _id:
          type: string
          description: Object id
        created_ts:
          type: string
          format: date-time
        topic_id:
          type: string
          description: Object id refering to the topic id this comment belongs to
        comment:
          type: string
          description: the actual comment body
        author_user:
          type: string
          description: the unique user identifier that posted this comment, usually username
        __v:
          type: string
          description: version of the topic (increments with changes)
    Comments:
      type: array
      items:
        $ref: "#/components/schemas/Comment"

    Permission:
      required:
        - _id
        - priority
        - allow
        - __v
      properties:
        _id:
          type: string
          description: Object id
        priority:
          type: number
          description: "Order to run priority in, DO NOT overlap, lower is first (i.e: 0 before 1)"
        allow:
          type: boolean
          description: Mostly for clarity on topics this should be true, on comments false
          default: false
        topic_id:
          type: string
          description: List of topic ids this rule applies to, * for all. Cannot be used with comment_id
        comment_id:
          type: string
          description: List of comment ids this rule applies to, * for all. Cannot be used with topic_id
        user_ids:
          type: array
          items:
            type: string
          description: The user_ids that this rule applies to, * for all
        group_ids:
          type: array
          items:
            type: string
          description: The group_ids that this rule applies to, * for all
        __v:
          type: string
          description: version of the topic (increments with changes)
    Permissions:
      type: array
      items:
        $ref: "#/components/schemas/Permission"


    TopicPost:
      required:
        - name
      properties:
        name:
          type: string
          description: name of the topic
        parent_id:
          type: string
          description: id of the parent topic
    CommentPost:
      required:
        - comment
      properties:
        comment:
          type: string
          description: comment body
    PermissionPost:
      required:
        - priority
      properties:
        priority:
          type: number
          description: "Order to run priority in, DO NOT overlap, lower is first (i.e: 0 before 1)"
        allow:
          type: boolean
          description: Mostly for clarity on topics this should be true, on comments false
          default: false
        topic_id:
          type: string
          description: Topic id this applies to, * for all. Either topic id or comment id required, cannot use both
        comment_id:
          type: string
          description: Comment id this applies to, * for all. Either topic id or comment id required, cannot use both
        user_ids:
          type: array
          items:
            type: string
          description: The user_ids that this rule applies to, * for all. Either this or group_ids required, cannot use both
        group_ids:
          type: array
          items:
            type: string
          description: The group_ids that this rule applies to, * for all. Either this or user_ids required, cannot use both

    Success:
      required:
        - message
      properties:
        message:
          type: string
          description: Contains message about the success, normally "Written successfully"
    Error:
      required:
        - error
      properties:
        errpr:
          type: string
          description: contains a message about the failure