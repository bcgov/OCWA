# Default values for ocwa.
global:
  jwtSecret: "ssh this is a secret"

#Frontend configuration
ocwa-frontend:
  replicaCount: 1

  image:
    repository: bcgovimages/ocwa_frontend
    tag: latest
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
    path: /
    hosts:
      - name: chart-example.local
        service: ocwa-ocwa-frontend
        port: 80
    tls: []

  downloadIngress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
    path: /
    hosts:
      - name: chart-example-download.local
        service: ocwa-ocwa-frontend-download
        port: 80
    tls: []

  port: 8000
  logLevel: error

  host: "serverHostedOnHere"

  cookieSecret: "COOKIE_SECRET_HERE"
  helpURL: "ocwaHelpURL"
  forumApiHost: "ocwa-forum-api.ocwa"
  forumSocket: "ocwa-forum-api.ocwa:3001"
  requestApiHost: "ocwa-request-api.ocwa"
  requestSocket: "ocwa-request-api.ocwa:2998"
  filesApiHost: "ocwa-storage-api.ocwa"
  exporterGroup: "/exporter"
  ocGroup: "/oc"
  codeExportEnabled: false
  repositoryHost: ""
  reportsGroup: "/reports"

  forms:
    newRequest: "new-request"

  auth:
    authorizationEndpoint: "openid.auth.endpoint"
    callbackURL: "chart-example.local/auth"
    clientID: "outputchecker"
    clientSecret: "CLIENT_SECRET_HERE"
    issuer: "openid.auth.issuer"
    logoutURL: "openid.auth.logoutURL"
    scope: "openid offline_access"
    tokenEndpoint: "openid.auth.tokenEndpoint"
    userInfoURL: "openid.userinfo.url"

  downloadCallbackUrl: "chart-example-download.local/auth"

  tls:
    enabled: false
    crt: "cert here"
    key: "key here"

  storage:
    endPoint: "ocwa-storage-api.ocwa"
    port: 9000
    useSSL: false
    bucket: "data"
    accessKey: "ssh this is a secret"
    secretKey: "ssh this is a secret"
  user:
    idField: Email


  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}


#Forum Api configuration
forum-api:
  replicaCount: 1

  image:
    repository: bcgovimages/ocwa_forum_api
    tag: latest
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 80

  wsService:
    type: ClusterIP
    websocketPort: 3001

  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.org/websocket-services: ocwa-forum-api-ws
    path: /
    hosts:
      - name: chart-example.local
        service: ocwa-forum-api-ws
        port: 3001
    tls: []

  apiPort: 3000
  wsPort: 3001
  logLevel: error
  database:
    host: ocwa-forum-api-mongo.ocwa
    username: forumApi
    password: password
    dbName: forumApi

  defaultAccessIsGroup: true
  requiredRoleToCreateTopic: "exporter"
  user:
    idField: Email
    emailField: Email
    givenNameField: GivenName
    surNameField: Surname
    groupField: Groups

  createDatabase: true
  storageClassName: default
  dbPod:
    persistence: /data/db
    adminEnv: MONGO_INITDB_ROOT_USERNAME
    admin: root
    passEnv: MONGO_INITDB_ROOT_PASSWORD
    pass: root
    dbEnv: MONGO_INITDB_DATABASE
    addAdminPassEnv: false
    adminPassEnv: MONGODB_ADMIN_PASSWORD
    initDb: true

  mongoImage:
    repository: mongo
    tag: 4.1

  emailTemplateEnabled: false
  emailTemplate: |-
  emailEnabled: false
  emailService: smtp.gmail.com
  emailSecure: true
  emailPort: 465
  emailUser: me@ocwa.com
  emailPassword: myPass
  emailFrom: donotreply@ocwa.com
  emailSubject: Forum Api

  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}


#Policy Api configuration
policy-api:
  replicaCount: 1

  image:
    repository: bcgovimages/ocwa_policy_api
    tag: latest
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: {}
    path: /
    hosts:
      - chart-example.local
    tls: []

  apiPort: 3004
  logLevel: error
  database:
    host: ocwa-forum-api-mongo.ocwa
    port: 27017
    username: forumApi
    password: password
    dbName: forumApi

  apiSecret: "ssh this is a secret"
  jwtAudience: "http://localhost"
  jwt_access_group": "admin"
  jwt_group: "Groups"
  user:
    idField: Email

  createDatabase: false


  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

#Project Api configuration
project-api:
  replicaCount: 1

  image:
    repository: bcgovimages/ocwa_project_api
    tag: latest
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: {}
    path: /
    hosts:
      - chart-example.local
    tls: []

  ##Configuration for OCWA Project Api
  apiPort: 3005
  logLevel: error

  ocwaUrl: http://ocwa-ui.ocwa

  database:
    host: ocwa-project-api-mongo.ocwa
    username: projectApi
    password: password
    dbName: projectApi

  adminGroup: "admin"
  ocGroup: "oc"

  apiKey: "ApiSecretKey"

  user:
    idField: Email
    emailField: Email
    givenNameField: GivenName
    surNameField: Surname
    groupField: Groups

  resources: {}
    # If you want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # projects:
    #  cpu: 100m
    #  memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}


#Request Api configuration
request-api:
  replicaCount: 1

  defaultFormName: "dataForm"
  defaultCodeFormName: "codeForm"
  formioUrl: "http://ocwa-formio.ocwa"
  formioUsername: "admin@example.com"
  formioPassword: "CHANGEME"

  image:
    repository: bcgovimages/ocwa_request_api
    tag: latest
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 80

  wsService:
    type: ClusterIP
    websocketPort: 3006

  ingress:
    enabled: false
    annotations: {}
    path: /
    hosts:
      - chart-example.local
    tls: []

  apiPort: 3002
  wsPort:  2998
  logLevel: error
  database:
    host: ocwa-forum-api-mongo.ocwa
    username: forumApi
    password: password
    dbName: forumApi

  createRole: "exporter"
  ocGroup: "oc"
  allowDeny: false

  user:
    idField: Email
    emailField: Email
    givenNameField: GivenName
    surNameField: Surname
    groupField: Groups

  forumApi: http://ocwa-forum-api.ocwa
  forumApiSecret: none

  webhookSecret: "webhook secret"

  storageUri: ocwa-storage-api.ocwa
  storagePort: 9000
  storageKey: myKey
  storageSecret: mySecret
  storageUseSSL: false
  storageWarnSize: 1025
  storageMaxSize: 10000000
  storageBucket: data

  autoApprove: false
  autoApproveImport: false
  emailOnSubmit: false

  validationApi: http://ocwa-validation-api.ocwa
  validationApiSecret: validateApiSecret

  projectApi: http://ocwa-project-api.ocwa
  projectApiSecret: projectApiSecret

  ocwaUrl: http://ocwa-ui.ocwa
  ocwaImportUrl: http://ocwadl-ui.ocwa
  emailTemplateEnabled: false
  emailTemplate: |-
  emailSubmitTemplateEnabled: false
  emailSubmitTemplate: |-
  emailEnabled: false
  emailService: smtp.gmail.com
  emailSecure: true
  emailPort: 465
  emailUser: me@ocwa.com
  emailPassword: myPass
  emailFrom: donotreply@ocwa.com

  gitopsEnabled: false
  gitopsUrl: http://gitops.ocwa
  gitopsSecret: s3cr3t

  createDatabase: false


  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

##Storage Api
storage-api:
  replicaCount: 1

  access_key: key
  access_secret: s3secretkey

  storageClassName: default
  storageSize: 1Gi

  image:
    pullPolicy: Always

  tus:
    image: h3brandon/tusd_py3
    tag: latest
    bucket: bucket
    region: us-east-1 #likely irrelevant
    jwtHook: true

  caddy:
    image: abiosoft/caddy
    tag: no-stats

  jwtAud: "foo"

  minio:
    image: minio/minio
    tag: latest
    server: true
    serverPath: "/data"
    proto: http

  service:
    type: ClusterIP
    tusPort: 80
    minioPort: 9000

  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
    path: /
    hosts:
      - name: chart-example.local
        service: ocwa-storage-api
        port: 80
    tls: []


  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}



#Validate Api
validate-api:
  replicaCount: 1

  image:
    repository: bcgovimages/ocwa_validate_api
    tag: latest
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: {}
    path: /
    hosts:
      - chart-example.local
    tls: []

  apiPort: 3003
  logLevel: error
  database:
    host: ocwa-forum-api-mongo.ocwa
    port: 27017
    username: forumApi
    password: password
    dbName: forumApi

  storage:
    host: ocwa-storage-api.ocwa:9000
    bucket: data
    key: key
    secret: s3secretkey

  policyApi: ocwa-policy-api.ocwa

  workingLimit: 5242880,
  failOverWorkingLimit: "true"

  requestWebhookEndpoint: http://ocwa-request-api.ocwa/v1/webhook
  requestWebhookSecret: "webhook secret"

  apiSecret: "ssh this is a secret"
  user:
    idField: Email

  alwaysScan: "true"

  createDatabase: false


  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

formio:
  replicaCount: 1

  image:
    repository: h3brandon/formio
    tag: latest
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 80

  ##Configuration for OCWA Forum Api
  apiPort: 3001
  logLevel: error

  global:
    jwtSecret: "ssh this is a secret"

  database:
    host: ocwa-formio-mongo.ocwa
    username: forumApi
    password: password
    dbName: formioapp

  username: "admin@example.com"
  password: CHANGEME

  nodeConfig: '{\"mongo\": \"mongodb://forumApi:password@ocwa-formio-mongo.ocwa:27017/formioapp\", \"jwt\": { \"secret\": \"ssh this is a secret\" } }'

  createDatabase: true
  storageClassName: default
  dbPod:
    persistence: /data/db
    adminEnv: MONGO_INITDB_ROOT_USERNAME
    admin: root
    passEnv: MONGO_INITDB_ROOT_PASSWORD
    pass: root
    dbEnv: MONGO_INITDB_DATABASE
    addAdminPassEnv: false
    adminPassEnv: MONGODB_ADMIN_PASSWORD
    initDb: true

  mongoImage:
    repository: mongo
    tag: 4.1

  resources: {}
    # If you want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}
