# Default values for ocwaFrontend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: bcgovimages/ocwa_frontend
  tag: latest
  pullPolicy: Always

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
  path: /
  hosts:
    - name: chart-example.local
      service: ocwa-ocwa-frontend
      port: 80
  tls: []

downloadIngress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
  path: /
  hosts:
    - name: chart-example-download.local
      service: ocwa-ocwa-frontend-download
      port: 80
  tls: []

##Configuration for OCWA Policy Api
port: 8000
logLevel: error

host: "serverHostedOnHere"
downloadHost: "downloadServerHostedOnHere"

cookieSecret: "COOKIE_SECRET_HERE"
helpURL: "ocwaHelpURL"
forumApiHost: "ocwa-forum-api.ocwa"
forumSocket: "ocwa-forum-api.ocwa:3001"
requestApiHost: "ocwa-requests-api.ocwa"
requestSocket: "ocwa-request-api.ocwa:2998"
filesApiHost: "ocwa-storage-api-mongo.ocwa"
exporterGroup: "/exporter"
ocGroup: "/oc"
codeExportEnabled: false
repositoryHost: ""
reportsGroup: "/reports"
forms:
  newRequest: "new-request"
auth:
  authorizationEndpoint: "openid.auth.endpoint"
  callbackURL: "chart-example.local/auth"
  clientID: "outputchecker"
  clientSecret: "ssh this is a secret"
  issuer: "openid.auth.issuer"
  logoutURL: "openid.auth.logout_url"
  scope: "openid offline_access"
  tokenEndpoint: "openid.auth.tokenEndpoint"
  userInfoURL: "openid.userinfo.url"

downloadCallbackUrl: "chart-example-download.local/auth"

storage:
  endPoint: "ocwa-storage-api.ocwa"
  port: 9000
  useSSL: false
  bucket: "data"
  accessKey: "ssh this is a secret"
  secretKey: "ssh this is a secret"
user:
  idField: Email

global:
  jwtSecret: "ssh this is a secret"

tls:
  enabled: false
  crt: "cert here"
  key: "key here"

resources: {}
  # If you want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
